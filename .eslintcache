[{"D:\\Documents - HDD\\React Projects\\whatsapp-clone\\src\\reportWebVitals.js":"1","D:\\Documents - HDD\\React Projects\\whatsapp-clone\\src\\App.js":"2","D:\\Documents - HDD\\React Projects\\whatsapp-clone\\src\\index.js":"3","D:\\Documents - HDD\\React Projects\\whatsapp-clone\\src\\Sidebar.js":"4","D:\\Documents - HDD\\React Projects\\whatsapp-clone\\src\\SidebarChat.js":"5","D:\\Documents - HDD\\React Projects\\whatsapp-clone\\src\\Chat.js":"6","D:\\Documents - HDD\\React Projects\\whatsapp-clone\\src\\Login.js":"7","D:\\Documents - HDD\\React Projects\\whatsapp-clone\\src\\StateProvider.js":"8","D:\\Documents - HDD\\React Projects\\whatsapp-clone\\src\\firebase.js":"9","D:\\Documents - HDD\\React Projects\\whatsapp-clone\\src\\reducer.js":"10"},{"size":362,"mtime":1607831692531,"results":"11","hashOfConfig":"12"},{"size":796,"mtime":1609352311822,"results":"13","hashOfConfig":"12"},{"size":693,"mtime":1608498800929,"results":"14","hashOfConfig":"12"},{"size":4360,"mtime":1609550354005,"results":"15","hashOfConfig":"12"},{"size":2486,"mtime":1609548997797,"results":"16","hashOfConfig":"12"},{"size":5300,"mtime":1609549578503,"results":"17","hashOfConfig":"12"},{"size":1139,"mtime":1608500959897,"results":"18","hashOfConfig":"12"},{"size":539,"mtime":1608500848242,"results":"19","hashOfConfig":"12"},{"size":740,"mtime":1608349167765,"results":"20","hashOfConfig":"12"},{"size":980,"mtime":1608498739074,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1uxflyh",{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Documents - HDD\\React Projects\\whatsapp-clone\\src\\reportWebVitals.js",[],["47","48"],"D:\\Documents - HDD\\React Projects\\whatsapp-clone\\src\\App.js",["49"],"D:\\Documents - HDD\\React Projects\\whatsapp-clone\\src\\index.js",[],"D:\\Documents - HDD\\React Projects\\whatsapp-clone\\src\\Sidebar.js",["50","51","52"],"import React, { useState, useEffect } from \"react\";\r\nimport { Avatar, IconButton }  from \"@material-ui/core\";\r\nimport DonutLargeIcon from '@material-ui/icons/DonutLarge';\r\nimport ChatIcon from '@material-ui/icons/Chat';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport \"./Sidebar.css\";\r\nimport { SearchOutlined } from \"@material-ui/icons\";\r\nimport SidebarChat from \"./SidebarChat\";\r\nimport database from \"./firebase\";\r\nimport { useStateValue } from \"./StateProvider\";\r\n\r\nfunction SideBar() {\r\n\r\n    const [rooms, setRooms] = useState([]);\r\n    const [{ user }, dispatch] = useStateValue();\r\n    const [logout, setLogout] = useState(false);\r\n    const [sidebarSearch, setSidebarSearch] = useState(false);\r\n    const [search, setSearch] = useState([]);\r\n    const [searchInput, setSearchInput] = useState(\"\");\r\n    const matcher = (s, values) => {\r\n        const re = RegExp(`.*${s.toLowerCase().split(\"\").join(\".*\")}.*`);\r\n        return values.filter((v) => v.data.name.toLowerCase().match(re));\r\n    };\r\n\r\n    useEffect(() => {\r\n        // Everytime the DB gets updated, take the latest snapshot\r\n        const unMount = database.collection(\"rooms\").onSnapshot((snapshot) =>\r\n            setRooms(\r\n                snapshot.docs.map((doc) => ({\r\n                    id: doc.id,\r\n                    data: doc.data(),\r\n                }))            \r\n            )\r\n        );\r\n\r\n        //return function will be called on component unmount\r\n        return () => {\r\n            unMount();\r\n        }\r\n    }, []);\r\n\r\n    // Every time the searchInput changes, perform the Search Functionality\r\n    useEffect(() => { \r\n        if(rooms.length > 0) {\r\n            setSearch(matcher(searchInput, rooms));\r\n        }\r\n        if(searchInput === \"\") {\r\n            setSidebarSearch(false);\r\n        }\r\n    }, [searchInput]);\r\n\r\n    // Run this method if the input value in the search bar is changed\r\n    const handleChange = (e) => {\r\n        setSidebarSearch(true);\r\n        setSearchInput(e.target.value);\r\n    }\r\n\r\n    // Log out when exit icon is clicked\r\n    const exitApp = () => {\r\n        localStorage.removeItem(\"uid\");\r\n        window.location.reload();\r\n        setLogout(true);\r\n    }\r\n\r\n    return (\r\n        <div className=\"sidebar\">\r\n          \r\n          <div className=\"sidebar__header\">\r\n            <Avatar src={user?.photoURL}/>\r\n            <div className=\"sidebar__headerRight\">\r\n                <IconButton>\r\n                    <DonutLargeIcon />\r\n                </IconButton>\r\n\r\n                <IconButton>\r\n                    <ChatIcon />\r\n                </IconButton>\r\n                \r\n                <div onClick={exitApp}>\r\n                    <IconButton>\r\n                        <ExitToAppIcon />\r\n                    </IconButton>            \r\n                </div>                    \r\n            </div>      \r\n          </div>\r\n\r\n          <div className=\"sidebar__search\">\r\n              <div className=\"sidebar__searchContainer\">\r\n                  <SearchOutlined />\r\n                  {/* <Input className=\"sidebar__searchbar\" placeholder=\"Search or start new chat\" inputProps={{ 'aria-label': 'description' }} /> */}\r\n                  <input \r\n                    placeholder=\"Search or start a new chat\"\r\n                    value = {searchInput}\r\n                    type=\"text\"\r\n                    onChange={handleChange}\r\n                  />\r\n              </div>       \r\n          </div>\r\n\r\n          {sidebarSearch ? (\r\n            <div className=\"sidebar__chats\">\r\n                <SidebarChat addNewChat/>\r\n\r\n                {/* Display the room which matches the search input */}\r\n                {search.map((room) => (\r\n                    <SidebarChat key={room.id} id={room.id} name={room.data.name} />\r\n                ))}\r\n            </div>\r\n          ): (\r\n            <div className=\"sidebar__chats\">\r\n                <SidebarChat addNewChat/>\r\n\r\n                {/* Display each room from the database */}\r\n                {rooms.map((room) => (\r\n                    <SidebarChat key={room.id} id={room.id} name={room.data.name} />\r\n                ))}\r\n            </div>\r\n          )}\r\n\r\n          <div className=\"sidebar__footer\">\r\n              <p>&copy; Preyansh Kachhia {new Date().getFullYear()}</p>\r\n          </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SideBar","D:\\Documents - HDD\\React Projects\\whatsapp-clone\\src\\SidebarChat.js",[],"D:\\Documents - HDD\\React Projects\\whatsapp-clone\\src\\Chat.js",["53","54","55"],"import React, { useState, useEffect } from 'react';\r\nimport \"./Chat.css\";\r\nimport  { Avatar, IconButton } from \"@material-ui/core\";\r\nimport { AttachFile, SearchOutlined} from '@material-ui/icons';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport MoodIcon from '@material-ui/icons/Mood';\r\nimport MicIcon from '@material-ui/icons/Mic';\r\nimport { useParams } from \"react-router-dom\";\r\nimport database from \"./firebase\";\r\nimport firebase from \"firebase\";\r\nimport { useStateValue } from \"./StateProvider\";\r\nimport 'emoji-mart/css/emoji-mart.css'\r\nimport { Picker } from 'emoji-mart'\r\n\r\nfunction Chat() {\r\n\r\n    const [seed, setSeed] = useState(\"\");\r\n    const [input, setInput] = useState(\"\");\r\n    const { roomId } = useParams();\r\n    const [roomName, setRoomName] = useState(\"\");\r\n    const [messages, setMessages] = useState([]);\r\n    const [{ user }, dispatch] = useStateValue();\r\n    const [emoji, setEmoji] = useState(false);\r\n\r\n    // Every time roomId changes, a random number will be generated\r\n    //This value will be assigned to the \"seed\" for the Avatar Image\r\n    useEffect(() => {\r\n        setSeed(Math.floor(Math.random() * 5000));\r\n    }, [roomId]);\r\n\r\n    //Perform this everytime the roomId changes, the room Name should change\r\n    //to the chat that was clicked from the side bar\r\n    useEffect(() => {\r\n        if(roomId) {\r\n            //set the roomName to the name of the chat that was clicked\r\n            //To do this fetch from the DB > use the roomId\r\n            database.collection(\"rooms\")\r\n            .doc(roomId)\r\n            .onSnapshot((snapshot) => \r\n                setRoomName(snapshot.data().name));\r\n\r\n            database.collection(\"rooms\")\r\n            .doc(roomId)\r\n            .collection(\"messages\")\r\n            .orderBy(\"timestamp\", \"asc\")\r\n            .onSnapshot((snapshot) =>\r\n                setMessages(snapshot.docs.map((doc) => doc.data()))\r\n            );\r\n        }\r\n    }, [roomId]);\r\n\r\n    const addEmoji = (e) => {\r\n        let chosenEmoji = e.native;\r\n        setInput(input + chosenEmoji);\r\n    };\r\n\r\n    const closeEmojiPicker = () => {\r\n        if(emoji) {\r\n            setEmoji(false);\r\n        }\r\n    };\r\n\r\n    const sendMessage = (e) => {\r\n        e.preventDefault();\r\n        console.log(\"You typed >>>\", input);\r\n\r\n        // add the message entered into the database\r\n        // assign the server timestamp, to display the time based on the user's time zone\r\n        database.collection(\"rooms\").doc(roomId).collection(\"messages\").add({\r\n            message: input,\r\n            name: user.displayName,\r\n            timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n        });\r\n\r\n        setInput(\"\");\r\n    };\r\n\r\n    return (\r\n        \r\n        <div className=\"chat\">\r\n            <div className=\"chat__header\">\r\n                <Avatar src={`https://avatars.dicebear.com/api/human/${seed}.svg`}/>\r\n\r\n                <div className=\"chat__headerInfo\">\r\n                    <h3>{roomName}</h3>\r\n                    {/* last seen will be the timestamp from the last message */}\r\n                    <p>\r\n                        Last seen{\" \"}\r\n                        {messages.length !== 0 \r\n                        ? new Date(\r\n                            messages[messages.length - 1]?.\r\n                            timestamp?.toDate())\r\n                            .toLocaleString()\r\n                        : \"unknown. Please enter a message.\"}\r\n                    </p>\r\n                </div>\r\n\r\n                <div className=\"chat__headerRight\">\r\n                    <IconButton>\r\n                        <SearchOutlined />\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <MoreVertIcon />\r\n                    </IconButton>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"chat__body\">\r\n                {messages.map((message) => (\r\n                    <p className={`chat__message ${message.name === user.displayName && \"chat__receiver\"}`}>\r\n                        <span className=\"chat__name\">{message.name}</span>\r\n                        {message.message}\r\n                        <span className=\"chat__timestamp\">\r\n                            {new Date(message.timestamp?.toDate()).toLocaleString()}\r\n                        </span>\r\n                    </p>\r\n                ))}\r\n            </div>\r\n\r\n            <div className=\"chat__footer\">\r\n                <IconButton>\r\n                    <MoodIcon \r\n                    className=\"chat__emojiIcon\" \r\n                    onClick={ () => setEmoji(!emoji)}\r\n                    />\r\n                    {emoji ? <Picker onSelect={addEmoji} /> : null}\r\n                </IconButton>\r\n\r\n                <form>\r\n                    <input \r\n                    value={input} \r\n                    onChange={(e) => setInput(e.target.value)}\r\n                    onClick={closeEmojiPicker} \r\n                    placeholder=\"Type a message\" \r\n                    type=\"text\" \r\n                    />\r\n                    <button onClick={sendMessage} type=\"submit\">Send</button>\r\n                </form>\r\n\r\n                <IconButton>\r\n                    <MicIcon /> \r\n                </IconButton>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chat","D:\\Documents - HDD\\React Projects\\whatsapp-clone\\src\\Login.js",["56"],"import React from 'react';\r\nimport { Button } from \"@material-ui/core\";\r\nimport \"./Login.css\";\r\nimport { auth, provider } from './firebase';\r\nimport { useStateValue } from \"./StateProvider\";\r\nimport { actionTypes } from \"./reducer\";\r\n\r\nfunction Login() {\r\n    const [{}, dispatch] = useStateValue();\r\n\r\n    const signIn = () => {\r\n        auth\r\n        .signInWithPopup(provider)\r\n        .then(result => {\r\n            console.log(result.user);\r\n            dispatch({\r\n                type: actionTypes.SET_USER,\r\n                user: result.user,\r\n            });\r\n        })\r\n        .catch(error => alert(error.message));\r\n    }\r\n\r\n    return (\r\n        <div className=\"login\">\r\n            <div className=\"login__container\">\r\n                <img src=\"https://upload.wikimedia.org/wikipedia/commons/6/6b/WhatsApp.svg\" alt=\"\"/>\r\n                <div className=\"login__text\">\r\n                    <h1>Welcome to WhatsApp</h1>\r\n                </div>\r\n\r\n                <Button onClick={signIn}>\r\n                    Sign In With Google\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","D:\\Documents - HDD\\React Projects\\whatsapp-clone\\src\\StateProvider.js",[],["57","58"],"D:\\Documents - HDD\\React Projects\\whatsapp-clone\\src\\firebase.js",[],"D:\\Documents - HDD\\React Projects\\whatsapp-clone\\src\\reducer.js",[],{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","severity":1,"message":"64","line":10,"column":20,"nodeType":"65","messageId":"66","endLine":10,"endColumn":28},{"ruleId":"63","severity":1,"message":"64","line":15,"column":22,"nodeType":"65","messageId":"66","endLine":15,"endColumn":30},{"ruleId":"63","severity":1,"message":"67","line":16,"column":12,"nodeType":"65","messageId":"66","endLine":16,"endColumn":18},{"ruleId":"68","severity":1,"message":"69","line":50,"column":8,"nodeType":"70","endLine":50,"endColumn":21,"suggestions":"71"},{"ruleId":"63","severity":1,"message":"72","line":4,"column":10,"nodeType":"65","messageId":"66","endLine":4,"endColumn":20},{"ruleId":"63","severity":1,"message":"64","line":22,"column":22,"nodeType":"65","messageId":"66","endLine":22,"endColumn":30},{"ruleId":"73","severity":1,"message":"74","line":91,"column":58,"nodeType":"75","messageId":"76","endLine":91,"endColumn":60,"fix":"77"},{"ruleId":"78","severity":1,"message":"79","line":9,"column":12,"nodeType":"80","messageId":"81","endLine":9,"endColumn":14},{"ruleId":"59","replacedBy":"82"},{"ruleId":"61","replacedBy":"83"},"no-native-reassign",["84"],"no-negated-in-lhs",["85"],"no-unused-vars","'dispatch' is assigned a value but never used.","Identifier","unusedVar","'logout' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'rooms'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setSearch' needs the current value of 'rooms'.","ArrayExpression",["86"],"'AttachFile' is defined but never used.","dot-location","Expected dot to be on same line as property.","MemberExpression","expectedDotBeforeProperty",{"range":"87","text":"88"},"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected",["84"],["85"],"no-global-assign","no-unsafe-negation",{"desc":"89","fix":"90"},[3280,3312],"\r\n                            ?.","Update the dependencies array to be: [rooms, searchInput]",{"range":"91","text":"92"},[1823,1836],"[rooms, searchInput]"]